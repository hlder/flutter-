hello，大家好，从今天起我们开始学习flutter。在开始学习之前呢，我们先来了解一下什么是flutter？为什么我们要学flutter？我们学习完后又能做什么？

flutter是Google在2015年推出的一个UI框架，它可以实现跨平台开发，包括Android开发啊，ios开发啊，甚至可以做web开发啊！
不过目前flutter还不是非常的成熟，第三方库什么的也不是很完善，所以flutter还没有开始流行起来。在当前移动跨平台开发比较流行的还是facebook的reactnative，并且国内也有很多的小公司在使用reactnative。而flutter比reactnative的优势会明显很多，所以我也相信flutter也会渐渐流行起来的！
那么我们便要走在技术的最前端，努力的学习新技术，才不会被淘汰甚至可以成为佼佼者。

那么我们学完课程之后可以做什么呢。
只要大家认真的跟着视频后面一步步做完，如果是刚学习开发的，可以依葫芦画瓢，参照我的写法写出app了。如果以前就是做开发的那就更好理解了，可以举一反三，基本就可以上手做项目了。
那么为什么我们不先讲基础语法呢？我认为啊，兴趣是最好的老师，要想让大家产生兴趣，就需要能很快的入手，能快速的看到成果。如果从基础讲起会很枯燥，很多人就会不耐心听到时候就会放弃了。我也是过来人，当年听java基础的时候一度想睡觉。所以我的方法就是先让大家看到成果，再去学习基础。我们这篇课程主要就是让大家入门。

下面我们来看看flutter有哪些优势：
第一个跨平台，
跨平台的想法由来已久了，从Android和ios手机火了以后就一直在讲跨平台，从一开始的用webview+html的混合开发模式，到后来的react native，其实都没有真正的实现跨平台。
混合开发模式开发出的app体验上和原生app的差距实在太大了，所以渐渐就被遗弃了。而reactnative虽然拥有原生的体验，可是坑太多，开发和理解起来会让人头疼，很多大公司之所以不使用reactnative的理由是：“reactnative会让程序员感到挫败感”呵呵，总之reactnative有很多的缺陷。
而flutter使用的是自己的flutter engine不需要想reactnative那样侨接，也就省了很多莫名其妙的错误。虽然flutter engine性能不比原生但也相差无几，体验方面也是接近原生的体验。

flutter呢是Google开发的移动UI框架，那么肯定得支持Google的设计规范material design，这一点上flutter比原生开发都好很多，可以用很少的代码就能实现material design的精美设计。flutter同样也支持了ios的设计规范Cupertino。我们的课程主要还是使用material design来开发，有对Cupertino有兴趣的自己可以尝试着使用一下！

从语言难度上讲，dart语言比java或objectC都要简单很多，而布局上，Android和ios都有自己的布局规范，而dart可以用一套布局两边使用，只需要学习一套即可。


好了，经过今天的讲解相信大家对flutter也有了一定程度上的了解，今天就唠嗑到这里，从下节课起我们就开始实战练习了！









































